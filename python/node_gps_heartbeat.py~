#!/usr/bin/env python
import socket
import serial #python package for reading serial ports
import time

port = int(raw_input('enter UDP port # (generally use 5557): '))
ip_addr = (raw_input('enter ip address (ex. 10.0.0.2): '))
type_of_test = int(raw_input('run for real, press 1, run dummy press 2: '))
print type(type_of_test)

#if type_of_test ==1:
#	ser=serial.Serial( '/dev/ttyUSB0', 4800, timeout = 5)#creates serial vairable and sets port to read from and speed to read from port. Timeout prevents program from waiting more than X seconds in case of infinite loop
#else:
#	print "running dummy GPS value of: '$GPGGA,205704.000,3849.3529,N,07701.5355,W,1,08,1.2,10.0,M,-33.5,M,,0000*54'"
clientsocket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
clientsocket.connect((ip_addr,port))

msg_num = 1
while 1:
#	if type_of_test == 1:
#		line = ser.readline()#reads a line of data from port
#	else:
	line = '$GPGGA,205704.000,3849.3529,N,07701.5355,W,1,08,1.2,10.0,M,-33.5,M,,0000*54\n'
	splitline= line.split(',')#splits the line when a comma is read

	msg = line
	print "running on ip: %s \nrunning on port: %s" % (ip_addr,port)
	filename = "gps.txt"
	if splitline[0] == '$GPGGA':#if line begins with $GPGGA
		#print 'splitline[0]: ',splitline[0]
		f = open(filename,'w')
		f.write(line)
		f.close()
		gps_time = splitline[1]#information we we wish to extract
		latitude= splitline[2]#line number is the order the data is written in the GPGGA line
		latDir=splitline[3]
		longitude=splitline[4]
		longDir=splitline[5]
		print 'time: ',gps_time
		print 'lat: ', latitude
		print 'long: ', longitude
		print 'message being sent to server',msg
		if type_of_test == 2:
			print 'this is a fake message # %d' % msg_num
			time.sleep(1)
			msg_num+=1
		else:
			print 'this is a real message # %d' % msg_num
			msg_num+=1
		clientsocket.send(msg)
		#clientsocket.close()
	else:
		clientsocket.close()
		#break
